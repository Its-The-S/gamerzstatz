{"version":3,"sources":["utils/UserContext.js","pages/Home.js","components/Jumbotron/index.js","pages/NoMatch.js","utils/mutations.js","utils/auth.js","pages/Login.js","pages/Signup.js","components/Nav/index.js","App.js","index.js"],"names":["UserContext","React","createContext","UserProvider","children","useState","name","gamertag","xuid","email","password","currentUser","Provider","value","Home","className","Jumbotron","style","height","clear","paddingTop","textAlign","NoMatch","role","LOGIN","gql","ADD_USER","decode","this","getToken","token","isTokenExpired","exp","Date","now","err","localStorage","getItem","idToken","setItem","window","location","assign","removeItem","Login","props","formState","setFormState","useMutation","login","error","handleFormSubmit","event","a","preventDefault","variables","mutationResponse","data","Auth","console","log","handleChange","target","to","onSubmit","htmlFor","placeholder","type","id","onChange","Signup","addUser","firstName","lastName","Nav","loggedIn","href","onClick","logout","httpLink","createHttpLink","uri","authLink","setContext","_","headers","authorization","client","ApolloClient","link","concat","cache","InMemoryCache","App","ApolloProvider","path","element","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.09175e8d.chunk.js","sourcesContent":["import React, { useState } from 'react';\n\nexport const UserContext = React.createContext();\nexport const useUser = () => useContext(UserContext);\n\nconst UserProvider = (children) => {\n  const [currentUser, setCurrentUser] = useState({\n    name: 'John',\n    gamertag: 'Admin',\n    xuid: 142323,\n    email: '',\n    password: '',\n  });\n\n  return (\n    <UserContext.Provider value={{ currentUser: currentUser }}>\n        {children}\n        </UserContext.Provider>\n  );\n};\n\nexport default UserProvider;","import React from \"react\";\n\nconst Home = () => {\n    return <div className=\"container\">HELLO WORLD</div>;\n};\n\nexport default Home;\n","import React from 'react';\n\nfunction Jumbotron({ children }) {\n  return (\n    <div\n      style={{\n        height: 560,\n        clear: 'both',\n        paddingTop: 120,\n        textAlign: 'center',\n      }}\n    >\n      {children}\n    </div>\n  );\n}\n\nexport default Jumbotron;\n","import React from \"react\";\nimport Jumbotron from \"../components/Jumbotron\";\n\nconst NoMatch = () => {\n  return (\n    <div>\n      <Jumbotron>\n        <h1>404 Page Not Found</h1>\n        <h1>\n          <span role=\"img\" aria-label=\"Face With Rolling Eyes Emoji\">\n            🙄\n          </span>\n        </h1>\n      </Jumbotron>\n    </div>\n  );\n};\n\nexport default NoMatch;\n","import { gql } from \"@apollo/client\";\n\nexport const LOGIN = gql`\n    mutation login($email: String!, $password: String!) {\n        login(email: $email, password: $password) {\n            token\n            user {\n                _id\n            }\n        }\n    }\n`;\n\nexport const ADD_ORDER = gql`\n    mutation addOrder($products: [ID]!) {\n        addOrder(products: $products) {\n            purchaseDate\n            products {\n                _id\n                name\n                description\n                price\n                quantity\n                category {\n                    name\n                }\n            }\n        }\n    }\n`;\n\nexport const ADD_USER = gql`\n    mutation Mutation($firstName: String!, $lastName: String!, $gamertag: String!, $email: String!, $password: String!) {\n        addUser(firstName: $firstName, lastName: $lastName, gamertag: $gamertag, email: $email, password: $password) {\n            token\n            user {\n                firstName\n                lastName\n                gamertag\n                email\n            }\n        }\n    }\n`;\n","import decode from 'jwt-decode';\n\nclass AuthService {\n  getProfile() {\n    return decode(this.getToken());\n  }\n\n  loggedIn() {\n    // Checks if there is a saved token and it's still valid\n    const token = this.getToken();\n    return !!token && !this.isTokenExpired(token);\n  }\n\n  isTokenExpired(token) {\n    try {\n      const decoded = decode(token);\n      if (decoded.exp < Date.now() / 1000) {\n        return true;\n      } else return false;\n    } catch (err) {\n      return false;\n    }\n  }\n\n  getToken() {\n    // Retrieves the user token from localStorage\n    return localStorage.getItem('id_token');\n  }\n\n  login(idToken) {\n    // Saves user token to localStorage\n    localStorage.setItem('id_token', idToken);\n\n    window.location.assign('/');\n  }\n\n  logout() {\n    // Clear user token and profile data from localStorage\n    localStorage.removeItem('id_token');\n    // this will reload the page and reset the state of the application\n    window.location.assign('/');\n  }\n}\n\nexport default new AuthService();\n","import React, { useState } from \"react\";\nimport { useMutation } from \"@apollo/client\";\nimport { Link } from \"react-router-dom\";\nimport { LOGIN } from \"../utils/mutations\";\nimport Auth from \"../utils/auth\";\n\nfunction Login(props) {\n    const [formState, setFormState] = useState({ email: \"\", password: \"\" });\n    const [login, { error }] = useMutation(LOGIN);\n\n    const handleFormSubmit = async (event) => {\n        event.preventDefault();\n        try {\n            const mutationResponse = await login({\n                variables: { email: formState.email, password: formState.password },\n            });\n            const token = mutationResponse.data.login.token;\n            Auth.login(token);\n        } catch (e) {\n            console.log(e);\n        }\n    };\n\n    const handleChange = (event) => {\n        const { name, value } = event.target;\n        setFormState({\n            ...formState,\n            [name]: value,\n        });\n    };\n\n    return (\n        <div className=\"container my-1\">\n            <Link to=\"/signup\">← Go to Signup</Link>\n\n            <h2>Login</h2>\n            <form onSubmit={handleFormSubmit}>\n                <div className=\"flex-row space-between my-2\">\n                    <label htmlFor=\"email\">Email address:</label>\n                    <input placeholder=\"youremail@test.com\" name=\"email\" type=\"email\" id=\"email\" onChange={handleChange} />\n                </div>\n                <div className=\"flex-row space-between my-2\">\n                    <label htmlFor=\"pwd\">Password:</label>\n                    <input placeholder=\"******\" name=\"password\" type=\"password\" id=\"pwd\" onChange={handleChange} />\n                </div>\n                {error ? (\n                    <div>\n                        <p className=\"error-text\">The provided credentials are incorrect</p>\n                    </div>\n                ) : null}\n                <div className=\"flex-row flex-end\">\n                    <button type=\"submit\">Submit</button>\n                </div>\n            </form>\n        </div>\n    );\n}\n\nexport default Login;\n","import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useMutation } from \"@apollo/client\";\nimport Auth from \"../utils/auth\";\nimport { ADD_USER } from \"../utils/mutations\";\n\nfunction Signup(props) {\n    const [formState, setFormState] = useState({ email: \"\", password: \"\", gamertag: \"\" });\n    const [addUser] = useMutation(ADD_USER);\n\n    const handleFormSubmit = async (event) => {\n        event.preventDefault();\n        const mutationResponse = await addUser({\n            variables: {\n                email: formState.email,\n                password: formState.password,\n                firstName: formState.firstName,\n                lastName: formState.lastName,\n                gamertag: formState.gamertag,\n            },\n        });\n        const token = mutationResponse.data.addUser.token;\n        console.log(mutationResponse);\n        debugger;\n        Auth.login(token);\n    };\n\n    const handleChange = (event) => {\n        const { name, value } = event.target;\n        setFormState({\n            ...formState,\n            [name]: value,\n        });\n    };\n\n    return (\n        <div className=\"container my-1\">\n            <Link to=\"/login\">← Go to Login</Link>\n\n            <h2>Signup</h2>\n            <form onSubmit={handleFormSubmit}>\n                <div className=\"flex-row space-between my-2\">\n                    <label htmlFor=\"firstName\">First Name:</label>\n                    <input placeholder=\"First\" name=\"firstName\" type=\"firstName\" id=\"firstName\" onChange={handleChange} />\n                </div>\n                <div className=\"flex-row space-between my-2\">\n                    <label htmlFor=\"lastName\">Last Name:</label>\n                    <input placeholder=\"Last\" name=\"lastName\" type=\"lastName\" id=\"lastName\" onChange={handleChange} />\n                </div>\n                <div className=\"flex-row space-between my-2\">\n                    <label htmlFor=\"gamertag\">Gamertag:</label>\n                    <input placeholder=\"tag\" name=\"gamertag\" type=\"gamertag\" id=\"gamertag\" onChange={handleChange} />\n                </div>\n                <div className=\"flex-row space-between my-2\">\n                    <label htmlFor=\"email\">Email:</label>\n                    <input placeholder=\"youremail@test.com\" name=\"email\" type=\"email\" id=\"email\" onChange={handleChange} />\n                </div>\n                <div className=\"flex-row space-between my-2\">\n                    <label htmlFor=\"pwd\">Password:</label>\n                    <input placeholder=\"******\" name=\"password\" type=\"password\" id=\"pwd\" onChange={handleChange} />\n                </div>\n                <div className=\"flex-row flex-end\">\n                    <button type=\"submit\">Submit</button>\n                </div>\n            </form>\n        </div>\n    );\n}\n\nexport default Signup;\n","import React from 'react';\nimport Auth from '../../utils/auth';\nimport { Link } from 'react-router-dom';\n\nfunction Nav() {\n  function showNavigation() {\n    if (Auth.loggedIn()) {\n      return (\n        <ul className=\"flex-row\">\n          <li className=\"mx-1\">\n            <Link to=\"/orderHistory\">Order History</Link>\n          </li>\n          <li className=\"mx-1\">\n            {/* this is not using the Link component to logout or user and then refresh the application to the start */}\n            <a href=\"/\" onClick={() => Auth.logout()}>\n              Logout\n            </a>\n          </li>\n        </ul>\n      );\n    } else {\n      return (\n        <ul className=\"flex-row\">\n          <li className=\"mx-1\">\n            <Link to=\"/signup\">Signup</Link>\n          </li>\n          <li className=\"mx-1\">\n            <Link to=\"/login\">Login</Link>\n          </li>\n        </ul>\n      );\n    }\n  }\n\n  return (\n    <header className=\"flex-row px-1\">\n      <h1>\n        <Link to=\"/\">\n          <span role=\"img\" aria-label=\"shopping bag\">\n            🛍️\n          </span>\n          -Shop-Shop\n        </Link>\n      </h1>\n\n      <nav>{showNavigation()}</nav>\n    </header>\n  );\n}\n\nexport default Nav;\n","import React from \"react\";\nimport UserProvider from './utils/UserContext';\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\nimport { ApolloClient, InMemoryCache, ApolloProvider, createHttpLink } from \"@apollo/client\";\nimport { setContext } from \"@apollo/client/link/context\";\n\n// switch this to react provider\n// import { Provider } from \"react-redux\";\n\nimport Home from \"./pages/Home\";\nimport NoMatch from \"./pages/NoMatch\";\nimport Login from \"./pages/Login\";\nimport Signup from \"./pages/Signup\";\nimport Nav from \"./components/Nav\";\n\nconst httpLink = createHttpLink({\n    uri: \"/graphql\",\n});\n\nconst authLink = setContext((_, { headers }) => {\n    const token = localStorage.getItem(\"id_token\");\n    return {\n        headers: {\n            ...headers,\n            authorization: token ? `Bearer ${token}` : \"\",\n        },\n    };\n});\n\nconst client = new ApolloClient({\n    link: authLink.concat(httpLink),\n    cache: new InMemoryCache(),\n});\n\nfunction App() {\n    return (\n        <ApolloProvider client={client}>\n            <Router>\n                <div>\n                    {<UserProvider>\n                    <Nav />\n                    <Routes>\n                        <Route path=\"/\" element={<Home />} />\n                        <Route path=\"/login\" element={<Login />} />\n                        <Route path=\"/signup\" element={<Signup />} />\n                        <Route path=\"*\" element={<NoMatch />} />\n                    </Routes>\n                    </UserProvider>}\n                </div>\n            </Router>\n        </ApolloProvider>\n    );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n"],"sourceRoot":""}
{"version":3,"sources":["utils/UserContext.js","assets/dmc5se-square.jpeg","assets/cod.jpg","assets/sims.png","assets/pvz.jpg","assets/Minecraft_cover.png","assets/Batman_Arkham_Knight_Cover_Art.jpg","components/Carousel/index.js","pages/Home.js","components/Jumbotron/index.js","pages/NoMatch.js","utils/mutations.js","utils/auth.js","pages/Login.js","pages/Signup.js","components/GameCard/index.js","pages/Profile.js","components/Nav/index.js","components/Chart/index.js","pages/Compare.js","components/Footer/index.js","App.js","index.js"],"names":["UserContext","React","createContext","UserProvider","children","useState","name","gamertag","xuid","email","password","currentUser","Provider","value","Carousel","imageStyle","width","border","padding","resizeMode","className","style","textAlign","justifyContent","alignItems","id","options","perPage","rewind","onMoved","splide","newIndex","src","dmc5","alt","href","target","Cod","Pvz","Minecraft","Batman","Home","Jumbotron","height","clear","paddingTop","NoMatch","role","LOGIN","gql","ADD_USER","decode","this","getToken","token","isTokenExpired","exp","Date","now","err","localStorage","getItem","idToken","setItem","window","location","assign","removeItem","axios","require","Login","props","formState","setFormState","useMutation","login","error","handleFormSubmit","event","a","preventDefault","variables","mutationResponse","data","get","user","fetchAccount","newUser","firstName","lastName","profileUsers","avatar","settings","gamerscore","JSON","stringify","fetchAchieve","Auth","console","log","handleChange","to","onSubmit","htmlFor","placeholder","type","onChange","Signup","addUser","GameCard","margin","title","coverArt","currentAchievements","currentGamerScore","totalGamerScore","percentAchieve","titleId","Profile","profileData","setProfileData","achieveData","setAchieveData","useEffect","parse","allAchievements","undefined","titles","length","map","game","index","achievement","progressPercentage","displayImage","currentGamerscore","totalGamerscore","Nav","loggedIn","onClick","logout","Chart","ChartJS","register","CategoryScale","LinearScale","BarElement","Title","Tooltip","Legend","friendAchieveData","setFriendAchieveData","gameData","setGameData","chosenFriendData","setChosenFriendData","currentTitle","filter","chosenFriend","fetchFriendAchievements","friendList","friendId","friend","fetchFriendAchieve","currentFriendTitle","fetchGame","statFetch","gameTitle","achievements","titleAssociations","maintainAspectRatio","scales","x","grid","color","lineWidth","ticks","font","weight","size","y","layout","right","left","plugins","legend","position","labels","display","text","datasets","label","backgroundColor","Compare","useParams","sortedFriendData","setSortedFriendData","document","querySelector","fetchFriends","friends","people","friendTags","push","sortedFriends","sort","reload","Footer","httpLink","createHttpLink","uri","authLink","setContext","_","headers","authorization","client","ApolloClient","link","concat","cache","InMemoryCache","App","ApolloProvider","path","element","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.4c786907.chunk.js","sourcesContent":["import React, { useState, useContext } from \"react\";\n// const axios = require(\"axios\");\n\nexport const UserContext = React.createContext();\nexport const useUser = () => useContext(UserContext);\n\nconst UserProvider = ({ children }) => {\n    const [currentUser, setCurrentUser] = useState({\n        name: \"InitialName\",\n        gamertag: \"InitialTag\",\n        xuid: \"12345\",\n        email: \"\",\n        password: \"\",\n    });\n\n    // const updateUser = (newName) => {\n    //     setCurrentUser({ ...currentUser, name: newName });\n    // };\n\n    // const getUser = () => {\n    //     return localStorage.getItem(\"user\");\n    // };\n\n    // const fetchUserAccount = async (gtag) => {\n    //     try {\n    //         const fetch = await axios.get(`/api/account/${gtag}`);\n    //         console.log(fetch);\n\n    //         // FILL THIS OUT WITH THE REST OF THE DATA\n    //         const newUser = {\n    //             name: \"InitialName\",\n    //             gamertag: gtag,\n    //             xuid: \"12345\",\n    //             email: \"\",\n    //             password: \"\",\n    //         };\n    //         localStorage.setItem(\"user\", JSON.stringify(newUser));\n    //         console.log(currentUser);\n    //     } catch (err) {\n    //         console.error(err);\n    //     }\n    // };\n\n    return <UserContext.Provider value={{ currentUser }}>{children}</UserContext.Provider>;\n};\n\nexport default UserProvider;\n","export default __webpack_public_path__ + \"static/media/dmc5se-square.4cf2fd40.jpeg\";","export default __webpack_public_path__ + \"static/media/cod.259beb29.jpg\";","export default __webpack_public_path__ + \"static/media/sims.1084e00f.png\";","export default __webpack_public_path__ + \"static/media/pvz.5e8c1f14.jpg\";","export default __webpack_public_path__ + \"static/media/Minecraft_cover.c3ecdd3b.png\";","export default __webpack_public_path__ + \"static/media/Batman_Arkham_Knight_Cover_Art.eff2b381.jpg\";","import React from \"react\";\nimport { Splide, SplideSlide } from \"@splidejs/react-splide\";\nimport \"@splidejs/splide/dist/css/splide.min.css\";\n//hard code images\nimport dmc5 from \"../../assets/dmc5se-square.jpeg\";\nimport Sims from \"../../assets/sims.png\";\nimport Cod from \"../../assets/cod.jpg\";\nimport Pvz from \"../../assets/pvz.jpg\";\nimport Minecraft from \"../../assets/Minecraft_cover.png\";\nimport Batman from \"../../assets/Batman_Arkham_Knight_Cover_Art.jpg\";\n\nexport const Carousel = () => {\n    const imageStyle = {\n        width: \"18rem\",\n        border: \"solid grey 5px\",\n        padding: \"15px\",\n        resizeMode: \"contain\",\n    };\n\n    const alignStyle = {\n        textAlign: \"center\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n    };\n\n    return (\n        <div className=\"wrapper\" style={alignStyle}>\n            <h2 id=\"basic-example-heading\">Popular Games</h2>\n\n            <Splide\n                options={{\n                    perPage: 1,\n                    //   height: \"2 px\",\n                    rewind: true,\n                    //   gap: \"1rem\",\n                }}\n                aria-labelledby=\"basic-example-heading\"\n                onMoved={(splide, newIndex) => {}}\n            >\n                <SplideSlide>\n                    <h4>\n                        Aidan's Pick: <span>Devil May Cry 5 Special Edition</span>\n                    </h4>\n                    <img src={dmc5} alt={\"Cover art for Devil May Cry 5 Special Edition\"} style={imageStyle} />\n                    <p>\n                        Read the review on{\" \"}\n                        <a href=\"https://www.ign.com/articles/2019/03/06/devil-may-cry-5-review\" target=\"_blank\">\n                            IGN\n                        </a>\n                    </p>\n                    <p>\n                        See who is streaming it on{\" \"}\n                        <a href=\"https://www.twitch.tv/search?term=devil%20may%20cry%205\" target=\"_blank\">\n                            Twitch\n                        </a>\n                    </p>\n                </SplideSlide>\n                <SplideSlide>\n                    <h4>\n                        Thomas' Pick: <span>Call of Duty: Black Ops 4</span>\n                    </h4>\n                    <img src={Cod} alt={\"Cover art for Call of Duty: Black Ops 4\"} style={imageStyle} />\n                    <p>\n                        Read the review on{\" \"}\n                        <a href=\"https://www.ign.com/articles/2018/10/20/call-of-duty-black-ops-4-review\" target=\"_blank\">\n                            IGN\n                        </a>\n                    </p>\n                    <p>\n                        See who is streaming it on{\" \"}\n                        <a href=\"https://www.twitch.tv/directory/game/Call%20of%20Duty%3A%20Black%20Ops%204\" target=\"_blank\">\n                            Twitch\n                        </a>\n                    </p>\n                </SplideSlide>\n                <SplideSlide>\n                    <h4>\n                        Brett's Pick: <span>Plants vs. Zombies</span>\n                    </h4>\n                    <img src={Pvz} alt={\"Cover art for Plants vs. Zombies\"} style={imageStyle} />\n                    <p>\n                        Read the review on{\" \"}\n                        <a href=\"https://www.ign.com/articles/2009/05/05/plants-vs-zombies-review-4\" target=\"_blank\">\n                            IGN\n                        </a>\n                    </p>\n                    <p>\n                        See who is streaming it on{\" \"}\n                        <a href=\"https://www.twitch.tv/directory/game/Plants%20vs.%20Zombies\" target=\"_blank\">\n                            Twitch\n                        </a>\n                    </p>\n                </SplideSlide>\n                <SplideSlide>\n                    <h4>\n                        Maya's Pick: <span>Minecraft</span>\n                    </h4>\n                    <img src={Minecraft} alt={\"Cover art for Minecraft\"} style={imageStyle} />\n                    <p>\n                        Read the review on{\" \"}\n                        <a href=\"https://www.ign.com/articles/2011/11/24/minecraft-review\" target=\"_blank\">\n                            IGN\n                        </a>\n                    </p>\n                    <p>\n                        See who is streaming it on{\" \"}\n                        <a href=\"https://www.twitch.tv/directory/game/Minecraft\" target=\"_blank\">\n                            Twitch\n                        </a>\n                    </p>\n                </SplideSlide>\n                <SplideSlide>\n                    <h4>\n                        Joe's Pick: <span>Batman Arkham Knight</span>\n                    </h4>\n                    <img src={Batman} alt={\"Cover art for Minecraft\"} style={imageStyle} />\n                    <p>\n                        Read the review on{\" \"}\n                        <a href=\"https://www.ign.com/articles/2015/06/19/batman-arkham-knight-review\" target=\"_blank\">\n                            IGN\n                        </a>\n                    </p>\n                    <p>\n                        See who is streaming it on{\" \"}\n                        <a href=\"https://www.twitch.tv/directory/game/Batman:%20Arkham%20Knight\" target=\"_blank\">\n                            Twitch\n                        </a>\n                    </p>\n                </SplideSlide>\n            </Splide>\n        </div>\n    );\n};\n\nexport default Carousel;\n","import React, { useEffect, useState } from \"react\";\nimport Carousel from \"../components/Carousel\";\n\nconst Home = () => {\n  return (\n    <div className=\"container\">\n      <Carousel />\n    </div>\n  );\n};\n\nexport default Home;\n","import React from 'react';\n\nfunction Jumbotron({ children }) {\n  return (\n    <div\n      style={{\n        height: 560,\n        clear: 'both',\n        paddingTop: 120,\n        textAlign: 'center',\n      }}\n    >\n      {children}\n    </div>\n  );\n}\n\nexport default Jumbotron;\n","import React from \"react\";\nimport Jumbotron from \"../components/Jumbotron\";\n\nconst NoMatch = () => {\n  return (\n    <div>\n      <Jumbotron>\n        <h1>404 Page Not Found</h1>\n        <h1>\n          <span role=\"img\" aria-label=\"Face With Rolling Eyes Emoji\">\n            🙄\n          </span>\n        </h1>\n      </Jumbotron>\n    </div>\n  );\n};\n\nexport default NoMatch;\n","import { gql } from \"@apollo/client\";\n\nexport const LOGIN = gql`\n    mutation login($email: String!, $password: String!) {\n        login(email: $email, password: $password) {\n            token\n            user {\n                _id\n                firstName\n                lastName\n                gamertag\n                email\n            }\n        }\n    }\n`;\n\nexport const ADD_ORDER = gql`\n    mutation addOrder($products: [ID]!) {\n        addOrder(products: $products) {\n            purchaseDate\n            products {\n                _id\n                name\n                description\n                price\n                quantity\n                category {\n                    name\n                }\n            }\n        }\n    }\n`;\n\nexport const ADD_USER = gql`\n    mutation addUser($firstName: String!, $lastName: String!, $gamertag: String!, $email: String!, $password: String!) {\n        addUser(firstName: $firstName, lastName: $lastName, gamertag: $gamertag, email: $email, password: $password) {\n            token\n            user {\n                firstName\n                lastName\n                gamertag\n                email\n            }\n        }\n    }\n`;\n","import decode from \"jwt-decode\";\n\nclass AuthService {\n    getProfile() {\n        return decode(this.getToken());\n    }\n\n    loggedIn() {\n        // Checks if there is a saved token and it's still valid\n        const token = this.getToken();\n        return !!token && !this.isTokenExpired(token);\n    }\n\n    isTokenExpired(token) {\n        try {\n            const decoded = decode(token);\n            if (decoded.exp < Date.now() / 1000) {\n                return true;\n            } else return false;\n        } catch (err) {\n            return false;\n        }\n    }\n\n    getToken() {\n        // Retrieves the user token from localStorage\n        return localStorage.getItem(\"id_token\");\n    }\n\n    login(idToken) {\n        // Saves user token to localStorage\n        localStorage.setItem(\"id_token\", idToken);\n\n        window.location.assign(\"/profile\");\n    }\n\n    logout() {\n        // Clear user token and profile data from localStorage\n        localStorage.removeItem(\"id_token\");\n        // this will reload the page and reset the state of the application\n        window.location.assign(\"/\");\n    }\n}\n\nexport default new AuthService();\n","import React, { useState, useEffect } from \"react\";\nimport { useMutation } from \"@apollo/client\";\nimport { Link } from \"react-router-dom\";\nimport { LOGIN } from \"../utils/mutations\";\nimport Auth from \"../utils/auth\";\nconst axios = require(\"axios\");\n\nfunction Login(props) {\n    const [formState, setFormState] = useState({ email: \"\", password: \"\" });\n    const [login, { error }] = useMutation(LOGIN);\n\n    const handleFormSubmit = async (event) => {\n        event.preventDefault();\n        try {\n            const mutationResponse = await login({\n                variables: { email: formState.email, password: formState.password },\n            });\n            const token = mutationResponse.data.login.token;\n            // await fetchUserAccount(mutationResponse.data.login.user.gamertag);\n\n            const fetchAccount = await axios.get(`/api/account/${mutationResponse.data.login.user.gamertag}`);\n            const newUser = {\n                name: `${mutationResponse.data.login.user.firstName} ${mutationResponse.data.login.user.lastName}`,\n                gamertag: mutationResponse.data.login.user.gamertag,\n                email: mutationResponse.data.login.user.email,\n                xuid: fetchAccount.data.profileUsers[0].id,\n                avatar: fetchAccount.data.profileUsers[0].settings[0].value,\n                gamerscore: fetchAccount.data.profileUsers[0].settings[1].value,\n            };\n            localStorage.setItem(\"user\", JSON.stringify(newUser));\n\n            const fetchAchieve = await axios.get(`/api/achieve/${newUser.xuid}`);\n            localStorage.setItem(\"allAchievements\", JSON.stringify(fetchAchieve.data));\n\n            Auth.login(token);\n        } catch (e) {\n            console.log(e);\n        }\n    };\n\n    const handleChange = (event) => {\n        const { name, value } = event.target;\n        setFormState({\n            ...formState,\n            [name]: value,\n        });\n    };\n\n    return (\n        <div className=\"container my-1\">\n            <Link to=\"/signup\">← Go to Signup</Link>\n            <h2>Login</h2>\n            <form onSubmit={handleFormSubmit}>\n                <div className=\"flex-row space-between my-2\">\n                    <label htmlFor=\"email\">Email address:</label>\n                    <input placeholder=\"youremail@test.com\" name=\"email\" type=\"email\" id=\"email\" onChange={handleChange} />\n                </div>\n                <div className=\"flex-row space-between my-2\">\n                    <label htmlFor=\"pwd\">Password:</label>\n                    <input placeholder=\"******\" name=\"password\" type=\"password\" id=\"pwd\" onChange={handleChange} />\n                </div>\n                {error ? (\n                    <div>\n                        <p className=\"error-text\">The provided credentials are incorrect</p>\n                    </div>\n                ) : null}\n                <div className=\"flex-row flex-end\">\n                    <button type=\"submit\">Submit</button>\n                </div>\n            </form>\n        </div>\n    );\n}\n\nexport default Login;\n","import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useMutation } from \"@apollo/client\";\nimport Auth from \"../utils/auth\";\nimport { ADD_USER } from \"../utils/mutations\";\nconst axios = require(\"axios\");\n\nfunction Signup(props) {\n    const [formState, setFormState] = useState({ email: \"\", password: \"\", firstName: \"\", lastName: \"\", gamertag: \"\" });\n    const [addUser] = useMutation(ADD_USER);\n\n    const handleFormSubmit = async (event) => {\n        event.preventDefault();\n        const mutationResponse = await addUser({\n            variables: {\n                email: formState.email,\n                password: formState.password,\n                firstName: formState.firstName,\n                lastName: formState.lastName,\n                gamertag: formState.gamertag,\n            },\n        });\n        const token = mutationResponse.data.addUser.token;\n        const fetchAccount = await axios.get(`/api/account/${mutationResponse.data.addUser.user.gamertag}`);\n        const newUser = {\n            name: `${mutationResponse.data.addUser.user.firstName} ${mutationResponse.data.addUser.user.lastName}`,\n            gamertag: mutationResponse.data.addUser.user.gamertag,\n            email: mutationResponse.data.addUser.user.email,\n            xuid: fetchAccount.data.profileUsers[0].id,\n            avatar: fetchAccount.data.profileUsers[0].settings[0].value,\n            gamerscore: fetchAccount.data.profileUsers[0].settings[1].value,\n        };\n        localStorage.setItem(\"user\", JSON.stringify(newUser));\n\n        const fetchAchieve = await axios.get(`/api/achieve/${newUser.xuid}`);\n        localStorage.setItem(\"allAchievements\", JSON.stringify(fetchAchieve.data));\n\n        console.log(mutationResponse);\n        Auth.login(token);\n    };\n\n    const handleChange = (event) => {\n        const { name, value } = event.target;\n        setFormState({\n            ...formState,\n            [name]: value,\n        });\n    };\n\n    return (\n        <div className=\"container my-1\">\n            <Link to=\"/login\">← Go to Login</Link>\n\n            <h2>Signup</h2>\n            <form onSubmit={handleFormSubmit}>\n                <div className=\"flex-row space-between my-2\">\n                    <label htmlFor=\"firstName\">First Name:</label>\n                    <input placeholder=\"First\" name=\"firstName\" type=\"firstName\" id=\"firstName\" onChange={handleChange} />\n                </div>\n                <div className=\"flex-row space-between my-2\">\n                    <label htmlFor=\"lastName\">Last Name:</label>\n                    <input placeholder=\"Last\" name=\"lastName\" type=\"lastName\" id=\"lastName\" onChange={handleChange} />\n                </div>\n                <div className=\"flex-row space-between my-2\">\n                    <label htmlFor=\"gamertag\">Gamertag:</label>\n                    <input placeholder=\"tag\" name=\"gamertag\" type=\"gamertag\" id=\"gamertag\" onChange={handleChange} />\n                </div>\n                <div className=\"flex-row space-between my-2\">\n                    <label htmlFor=\"email\">Email:</label>\n                    <input placeholder=\"youremail@test.com\" name=\"email\" type=\"email\" id=\"email\" onChange={handleChange} />\n                </div>\n                <div className=\"flex-row space-between my-2\">\n                    <label htmlFor=\"pwd\">Password:</label>\n                    <input placeholder=\"******\" name=\"password\" type=\"password\" id=\"pwd\" onChange={handleChange} />\n                </div>\n                <div className=\"flex-row flex-end\">\n                    <button type=\"submit\">Submit</button>\n                </div>\n            </form>\n        </div>\n    );\n}\n\nexport default Signup;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nexport default function GameCard(props) {\n    const cardStyle = {\n        width: \"18rem\",\n        border: \"solid grey 5px\",\n        padding: \"20px\",\n        margin: \"30px\",\n    };\n\n    return (\n        <div className=\"container\">\n            <div className=\"card\" style={cardStyle}>\n                <h5 className=\"card-title\">{props.title}</h5>\n                <img className=\"card-img-top\" src={props.coverArt} alt=\"Card cap\" />\n                <div className=\"card-body\">\n                    <p>Completed Achievements: {props.currentAchievements}</p>\n                    <p>\n                        Gamerscore: {props.currentGamerScore} / {props.totalGamerScore}\n                    </p>\n                    <p>Percent Complete: {props.percentAchieve}%</p>\n                    <Link to={`/compare/${props.titleId}`}>Check My Stats</Link>\n                </div>\n            </div>\n        </div>\n    );\n}\n","import React, { useEffect, useState } from \"react\";\nimport GameCard from \"../components/GameCard/index\";\nconst cardMaxIndex = 9;\n\nconst Profile = () => {\n    const [profileData, setProfileData] = useState({});\n    const [achieveData, setAchieveData] = useState({});\n\n    useEffect(() => {\n        const user = JSON.parse(localStorage.getItem(\"user\"));\n        setProfileData(user);\n\n        const allAchievements = JSON.parse(localStorage.getItem(\"allAchievements\"));\n        setAchieveData(allAchievements);\n    }, []);\n\n    if (achieveData.titles !== undefined && achieveData.titles.length > 0) {\n        return (\n            <div className=\"container\">\n                <div>\n                    {/* <i className=\"fa-brands fa-xbox\"></i> */}\n\n          <img src={profileData.avatar} alt=\"this user's profile avatar\" />\n          <h2>{profileData.gamertag}</h2>\n          <h4>Gamerscore: {profileData.gamerscore}</h4>\n        </div>\n\n                <div className=\"df fwrap\">\n                    {achieveData.titles.map((game, index) => {\n                        if (index <= cardMaxIndex && game.achievement.progressPercentage > 0) {\n                            return <GameCard key={index} titleId={game.titleId} coverArt={game.displayImage} currentAchievements={game.achievement.currentAchievements} currentGamerScore={game.achievement.currentGamerscore} percentAchieve={game.achievement.progressPercentage} title={game.name} totalGamerScore={game.achievement.totalGamerscore} />;\n                        }\n                    })}\n                </div>\n            </div>\n        );\n    }\n    return <></>;\n};\n\nexport default Profile;\n","import React from \"react\";\nimport Auth from \"../../utils/auth\";\nimport { Link } from \"react-router-dom\";\n// import { useUser } from \"../../utils/UserContext\";\n\n// displays nav bar\nfunction Nav() {\n    // const { currentUser, updateUser } = useUser();\n    // React.useEffect(() => {\n    //     updateUser();\n    // }, []);\n\n    function showNavigation() {\n        // displayed if user is logged in\n        if (Auth.loggedIn()) {\n            return (\n                <section className=\"top-nav\">\n                    <h1>\n                        <Link to=\"/\">\n                            <span role=\"img\" aria-label=\"controller \">\n                                🎮\n                            </span>\n                            Gamerz Statz\n                        </Link>\n                    </h1>\n                    <input id=\"menu-toggle\" type=\"checkbox\" />\n                    <label className=\"menu-button-container\" htmlFor=\"menu-toggle\">\n                        <div className=\"menu-button\"></div>\n                    </label>\n                    <ul className=\"menu\">\n                        <li>\n                            <a href=\"/profile\">Profile</a>\n                        </li>\n                        <li>\n                            {/* this is not using the Link component to logout or user and then refresh the application to the start */}\n                            <a href=\"/\" onClick={() => Auth.logout()}>\n                                Logout\n                            </a>\n                        </li>\n                    </ul>\n                </section>\n            );\n        } else {\n            // displayed if user is not logged in\n            return (\n                <section className=\"top-nav\">\n                    <h1>\n                        <Link to=\"/\">\n                            <span role=\"img\" aria-label=\"controller \">\n                                🎮\n                            </span>\n                            Gamerz Statz\n                        </Link>\n                    </h1>\n                    <input id=\"menu-toggle\" type=\"checkbox\" />\n                    <label className=\"menu-button-container\" htmlFor=\"menu-toggle\">\n                        <div className=\"menu-button\"></div>\n                    </label>\n                    <ul className=\"menu\">\n                        <li>\n                            <Link to=\"/signup\">Signup</Link>\n                        </li>\n                        <li>\n                            <Link to=\"/login\">Login</Link>\n                        </li>\n                    </ul>\n                </section>\n            );\n        }\n    }\n\n    return (\n        // logo section with name\n        <header>\n            <nav>{showNavigation()}</nav>\n        </header>\n    );\n}\n\nexport default Nav;\n","import React, { useEffect, useState } from \"react\";\nimport { Chart as ChartJS, CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend } from \"chart.js\";\nimport { Bar } from \"react-chartjs-2\";\nconst axios = require(\"axios\");\n// import { useUser } from \"../../utils/UserContext\";\n\nexport default function Chart(props) {\n    // const { currentUser } = useUser();\n    ChartJS.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend);\n\n    const [profileData, setProfileData] = useState({});\n    const [achieveData, setAchieveData] = useState({});\n    const [friendAchieveData, setFriendAchieveData] = useState({});\n    const [gameData, setGameData] = useState({});\n    const [chosenFriendData, setChosenFriendData] = useState();\n    // const [friendData, setFriendData] = useState({});\n\n    useEffect(() => {\n        const user = JSON.parse(localStorage.getItem(\"user\"));\n        setProfileData(user);\n\n        const allAchievements = JSON.parse(localStorage.getItem(\"allAchievements\"));\n        const currentTitle = allAchievements.titles.filter((title) => {\n            return title.titleId === props.titleId;\n        });\n        console.log(currentTitle);\n        setAchieveData(currentTitle[0].achievement);\n\n        const chosenFriend = JSON.parse(localStorage.getItem(\"chosenFriend\"));\n        setChosenFriendData(chosenFriend);\n\n        const fetchFriendAchievements = async () => {\n            const friendList = JSON.parse(localStorage.getItem(\"friendsList\"));\n            const friendId = friendList.filter((friend) => {\n                return friend.gamertag === chosenFriend;\n            });\n            console.log(\"fList\", friendId[0].xuid);\n            const fetchFriendAchieve = await axios.get(`/api/achieve/${friendId[0].xuid}`);\n            console.log(\"fetch\", fetchFriendAchieve);\n            const currentFriendTitle = fetchFriendAchieve.data.titles.filter((title) => {\n                return title.titleId === props.titleId;\n            });\n            console.log(\"friend\", currentFriendTitle);\n            setFriendAchieveData(currentFriendTitle[0]?.achievement);\n        };\n        fetchFriendAchievements();\n\n        const fetchGame = async () => {\n            const statFetch = await axios.get(`/api/game/${user.xuid}/${props.titleId}`);\n            setGameData(statFetch);\n            console.log(statFetch);\n            return statFetch;\n        };\n        fetchGame();\n\n        // const fetchFriends = async () => {\n        //     const friends = await axios.get(`/api/friend/${user.xuid}`);\n        //     console.log(\"friends\", friends);\n        //     setFriendData(friends);\n        //     return friends;\n        // };\n        // fetchFriends();\n\n        // const friends = JSON.parse(localStorage.getItem(\"friendsList\"));\n        // setFriendData(friends);\n    }, []);\n\n    let gameTitle = gameData.data?.achievements[0].titleAssociations[0].name || \"Loading...\";\n\n    const labels = [\"Achievements\", \"Progress\", \"Gamerscore\"];\n\n    const options = {\n        maintainAspectRatio: false,\n        scales: {\n            x: {\n                grid: {\n                    color: \"white\",\n                    lineWidth: 0.5,\n                },\n                ticks: {\n                    color: \"white\",\n                    font: {\n                        weight: \"normal\",\n                        size: \"15rem\",\n                    },\n                },\n            },\n            y: {\n                grid: {\n                    color: \"white\",\n                    lineWidth: 0.5,\n                },\n                ticks: {\n                    color: \"white\",\n                    font: {\n                        weight: \"normal\",\n                        size: \"15rem\",\n                    },\n                },\n            },\n        },\n        layout: {\n            padding: {\n                right: 15,\n                left: 15,\n            },\n        },\n        plugins: {\n            legend: {\n                position: \"top\",\n                labels: {\n                    color: \"white\",\n                    font: {\n                        weight: \"normal\",\n                        size: \"15rem\",\n                    },\n                },\n            },\n            title: {\n                display: true,\n                text: [`${profileData.gamertag} vs ${chosenFriendData}`, `${gameTitle}`],\n                color: \"white\",\n                font: {\n                    weight: \"normal\",\n                    size: \"20rem\",\n                },\n            },\n        },\n    };\n\n    const data = {\n        labels,\n        datasets: [\n            {\n                label: profileData.gamertag,\n                data: [achieveData?.currentAchievements, achieveData?.progressPercentage, achieveData?.currentGamerscore],\n                backgroundColor: \"#aab1ae\",\n            },\n            {\n                label: chosenFriendData,\n                data: [friendAchieveData?.currentAchievements, friendAchieveData?.progressPercentage, friendAchieveData?.currentGamerscore],\n                // data: labels.map(() => faker.datatype.number({ min: 0, max: 1000 })),\n                backgroundColor: \"#DB1A20\",\n            },\n        ],\n    };\n\n    // if (achieveData.titles !== undefined && achieveData.titles.length > 0) {\n    return (\n        <>\n            <Bar options={options} data={data} />\n        </>\n    );\n    // }\n    return <></>;\n}\n","import React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport Chart from \"../components/Chart\";\nconst axios = require(\"axios\");\n\nexport default function Compare() {\n    const { titleId } = useParams();\n    const [friendListData, setFriendListData] = useState();\n    const [chosenFriendData, setChosenFriendData] = useState();\n    const [sortedFriendData, setSortedFriendData] = useState([\"Loading Gamertags...\"]);\n\n    useEffect(() => {\n        localStorage.setItem(\"chosenFriend\", JSON.stringify(document.querySelector(\"#friendSelect\").value));\n        const chosenFriend = JSON.parse(localStorage.getItem(\"chosenFriend\"));\n        setChosenFriendData(chosenFriend);\n    });\n\n    useEffect(() => {\n        const user = JSON.parse(localStorage.getItem(\"user\"));\n\n        const fetchFriends = async () => {\n            const friends = await axios.get(`/api/friend/${user.xuid}`);\n            // setFriendData(friends);\n            localStorage.setItem(\"friendsList\", JSON.stringify(friends.data.people));\n            // setFriendListData(friends.data.people);\n            // const friendsArray = JSON.parse(localStorage.getItem(\"friendsList\"));\n            const friendTags = [];\n            if (friends) {\n                friends?.data?.people?.map((friend) => {\n                    friendTags.push(friend.gamertag);\n                });\n                // FIGURE OUT SORT WITHOUT CHANGING STATE\n                const sortedFriends = friendTags.sort();\n                setSortedFriendData(sortedFriends);\n            }\n            return friends;\n        };\n        fetchFriends();\n    }, []);\n\n    // const friendsArray = JSON.parse(localStorage.getItem(\"friendsList\"));\n    // const friendTags = [];\n    // friendsArray.map((friend) => {\n    //     friendTags.push(friend.gamertag);\n    // });\n    // const sortedFriends = friendTags.sort();\n\n    function handleChange() {\n        localStorage.setItem(\"chosenFriend\", JSON.stringify(document.querySelector(\"#friendSelect\").value));\n        window.location.reload(false);\n    }\n\n    return (\n        <>\n            <div>\n                <span>Compare to: </span>\n                <select id=\"friendSelect\" onChange={handleChange}>\n                    {sortedFriendData &&\n                        sortedFriendData.map((friend) => {\n                            return (\n                                <option key={friend} value={friend}>\n                                    {friend}\n                                </option>\n                            );\n                        })}\n                </select>\n            </div>\n            <div className=\"chart-container\">\n                <Chart titleId={titleId} />\n            </div>\n        </>\n    );\n}\n","import React from \"react\";\n// import { useUser } from \"../../utils/UserContext\";\n\nexport default function Footer() {\n  return (\n    <div>\n      <footer className=\"df footer\">\n        {/* footer card for all members */}\n        <div className=\"footer-card lg\">\n          <h6>Joe Palmisano</h6>\n          <a href=\"https://www.linkedin.com/in/joseph-palmisano-jnp/\" className=\"\" target=\"_blank\">\n            <i className=\"fa fa-linkedin px-1\" />\n          </a>\n          <a href=\"https://github.com/joepamedia\" target=\"_blank\">\n            <i className=\"fa fa-github px-1\" />\n          </a>\n        </div>\n        <div className=\"footer-card lg\">\n          <h6>Aidan Chamberlain</h6>\n          <a\n            href=\"https://www.linkedin.com/in/aidan-chamberlain-776b8b90/\"\n            className=\"\"\n            target=\"_blank\"\n          >\n            <i className=\"fa fa-linkedin px-1\" />\n          </a>\n          <a href=\"https://github.com/RedComet6\" target=\"_blank\">\n            <i className=\"fa fa-github px-1\" />\n          </a>\n        </div>\n        {/* brett */}\n        <div className=\"footer-card lg\">\n          <h6>Brett Gould</h6>\n          <a href=\"https://www.linkedin.com/in/brettdgould//\" className=\"\" target=\"_blank\">\n            <i className=\"fa fa-linkedin px-1\" />\n          </a>\n          <a href=\"https://github.com/bgould86\" target=\"_blank\">\n            <i className=\"fa fa-github px-1\" />\n          </a>\n        </div>\n        <div className=\"footer-card lg\">\n          <h6>Maya Tillman</h6>\n          <a\n            href=\"https://www.linkedin.com/in/maya-tillman-430084227/\"\n            className=\"\"\n            target=\"_blank\"\n          >\n            <i className=\"fa fa-linkedin px-1\" />\n          </a>\n          <a href=\"https://github.com/mayaatil\" target=\"_blank\">\n            <i className=\"fa fa-github px-1\" />\n          </a>\n        </div>\n        <div className=\"footer-card lg\">\n          <h6>Thomas Frohm</h6>\n          <a href=\"https://www.linkedin.com/in/thomas-f-767203232/\" target=\"_blank\">\n            <i className=\"fa fa-linkedin px-1\" />\n          </a>\n          <a href=\"https://github.com/tfrohm11\" target=\"_blank\">\n            <i className=\"fa fa-github px-1\" />\n          </a>\n        </div>\n        <div className=\"footer-card sm\">\n          <h6>Its The S</h6>\n          <a href=\"https://github.com/Its-The-S/gamerzstatz\" target=\"_blank\">\n            <i className=\"fa fa-github px-1\" />\n          </a>\n        </div>\n      </footer>\n    </div>\n  );\n}\n","import React from \"react\";\nimport UserProvider from \"./utils/UserContext\";\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\nimport { ApolloClient, InMemoryCache, ApolloProvider, createHttpLink } from \"@apollo/client\";\nimport { setContext } from \"@apollo/client/link/context\";\n\nimport Home from \"./pages/Home\";\nimport NoMatch from \"./pages/NoMatch\";\nimport Login from \"./pages/Login\";\nimport Signup from \"./pages/Signup\";\nimport Profile from \"./pages/Profile\";\nimport Nav from \"./components/Nav\";\nimport Compare from \"./pages/Compare\";\nimport Footer from \"./components/Footer/index\";\n\nconst httpLink = createHttpLink({\n  uri: \"/graphql\",\n});\n\nconst authLink = setContext((_, { headers }) => {\n  const token = localStorage.getItem(\"id_token\");\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `Bearer ${token}` : \"\",\n    },\n  };\n});\n\nconst client = new ApolloClient({\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache(),\n});\n\nfunction App() {\n  return (\n    <ApolloProvider client={client}>\n      <UserProvider>\n        <Router>\n          <>\n            <Nav />\n            <Routes>\n              <Route path=\"/\" element={<Home />} />\n              <Route path=\"/login\" element={<Login />} />\n              <Route path=\"/signup\" element={<Signup />} />\n              <Route path=\"/profile\" element={<Profile />} />\n              <Route path=\"/compare/:titleId\" element={<Compare />} />\n              <Route path=\"*\" element={<NoMatch />} />\n            </Routes>\n            <Footer />\n          </>\n        </Router>\n      </UserProvider>\n    </ApolloProvider>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./assets/css/main.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n"],"sourceRoot":""}
{"version":3,"sources":["utils/UserContext.js","assets/Minecraft_cover.png","components/Card/index.js","pages/Home.js","components/Jumbotron/index.js","pages/NoMatch.js","utils/mutations.js","utils/auth.js","pages/Login.js","pages/Signup.js","pages/Profile.js","components/Nav/index.js","components/Chart/index.js","pages/ChartForNow.js","assets/linkedinpsfix.png","components/Footer/index.js","App.js","index.js"],"names":["axios","require","UserContext","React","createContext","useUser","useContext","UserProvider","children","useState","name","gamertag","xuid","email","password","currentUser","fetchUserAccount","gtag","a","get","fetch","console","log","newUser","localStorage","setItem","JSON","stringify","error","Provider","value","Card","games","className","style","width","border","padding","src","Image","alt","href","Home","Jumbotron","height","clear","paddingTop","textAlign","NoMatch","role","LOGIN","gql","ADD_USER","decode","this","getToken","token","isTokenExpired","exp","Date","now","err","getItem","idToken","window","location","assign","removeItem","Login","props","formState","setFormState","useMutation","login","handleFormSubmit","event","preventDefault","variables","mutationResponse","data","user","Auth","handleChange","target","to","length","onSubmit","htmlFor","placeholder","type","id","onChange","Signup","firstName","lastName","addUser","Profile","profileData","setProfileData","useEffect","parse","Nav","loggedIn","onClick","logout","Chart","ChartJS","register","CategoryScale","LinearScale","BarElement","Title","Tooltip","Legend","options","scales","x","grid","color","lineWidth","ticks","font","weight","y","responsive","plugins","legend","position","labels","title","display","text","datasets","label","backgroundColor","ChartForNow","Footer","LinkedIn","httpLink","createHttpLink","uri","authLink","setContext","_","headers","authorization","client","ApolloClient","link","concat","cache","InMemoryCache","App","ApolloProvider","path","element","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9739b2dc.chunk.js","sourcesContent":["import React, { useState, useContext } from \"react\";\nconst axios = require(\"axios\");\n\nexport const UserContext = React.createContext();\nexport const useUser = () => useContext(UserContext);\n\nconst UserProvider = ({ children }) => {\n    const [currentUser, setCurrentUser] = useState({\n        name: \"InitialName\",\n        gamertag: \"InitialTag\",\n        xuid: \"12345\",\n        email: \"\",\n        password: \"\",\n    });\n\n    // const updateUser = (newName) => {\n    //     setCurrentUser({ ...currentUser, name: newName });\n    // };\n\n    // const getUser = () => {\n    //     return localStorage.getItem(\"user\");\n    // };\n\n    const fetchUserAccount = async (gtag) => {\n        try {\n            const fetch = await axios.get(`/api/account/${gtag}`);\n            console.log(fetch);\n            console.log(\"made it into the context fetch\");\n\n            // FILL THIS OUT WITH THE REST OF THE DATA\n            const newUser = {\n                name: \"InitialName\",\n                gamertag: gtag,\n                xuid: \"12345\",\n                email: \"\",\n                password: \"\",\n            };\n            localStorage.setItem(\"user\", JSON.stringify(newUser));\n            console.log(currentUser);\n        } catch (err) {\n            console.error(err);\n        }\n    };\n\n    return <UserContext.Provider value={{ currentUser, fetchUserAccount }}>{children}</UserContext.Provider>;\n};\n\nexport default UserProvider;\n","export default __webpack_public_path__ + \"static/media/Minecraft_cover.c3ecdd3b.png\";","import React from \"react\";\nimport Image from \"../../assets/Minecraft_cover.png\";\n\nexport default function Card() {\n    //hard code for now\n    const games = {\n        title: \"Minecraft\",\n        description: \"Create your own world\",\n        id: 1,\n    };\n\n    const cardStyle = {\n        width: \"18rem\",\n        border: \"solid grey 5px\",\n        padding: \"15px\",\n    };\n\n    //src is hardcoded for now, but will soon be populated with cover art\n    //button will be used\n    return (\n        <div className=\"container\">\n            <div className=\"card\" style={cardStyle}>\n                <h5 className=\"card-title\">{games.title}</h5>\n                <img className=\"card-img-top\" src={Image} alt=\"Card cap\" />\n                <div className=\"card-body\">\n                    <p className=\"card-text\">{games.description}</p>\n                    <button href=\"#\" className=\"btn btn-primary\">\n                        Check my Stats\n                    </button>\n                </div>\n            </div>\n        </div>\n    );\n}\n","import React, { useEffect, useState } from \"react\";\nimport Card from \"../components/Card/index\";\n\nconst Home = () => {\n    return (\n        <div className=\"container\">\n            <Card />\n        </div>\n    );\n};\n\nexport default Home;\n","import React from 'react';\n\nfunction Jumbotron({ children }) {\n  return (\n    <div\n      style={{\n        height: 560,\n        clear: 'both',\n        paddingTop: 120,\n        textAlign: 'center',\n      }}\n    >\n      {children}\n    </div>\n  );\n}\n\nexport default Jumbotron;\n","import React from \"react\";\nimport Jumbotron from \"../components/Jumbotron\";\n\nconst NoMatch = () => {\n  return (\n    <div>\n      <Jumbotron>\n        <h1>404 Page Not Found</h1>\n        <h1>\n          <span role=\"img\" aria-label=\"Face With Rolling Eyes Emoji\">\n            🙄\n          </span>\n        </h1>\n      </Jumbotron>\n    </div>\n  );\n};\n\nexport default NoMatch;\n","import { gql } from \"@apollo/client\";\n\nexport const LOGIN = gql`\n    mutation login($email: String!, $password: String!) {\n        login(email: $email, password: $password) {\n            token\n            user {\n                _id\n                firstName\n                lastName\n                gamertag\n                email\n            }\n        }\n    }\n`;\n\nexport const ADD_ORDER = gql`\n    mutation addOrder($products: [ID]!) {\n        addOrder(products: $products) {\n            purchaseDate\n            products {\n                _id\n                name\n                description\n                price\n                quantity\n                category {\n                    name\n                }\n            }\n        }\n    }\n`;\n\nexport const ADD_USER = gql`\n    mutation Mutation($firstName: String!, $lastName: String!, $gamertag: String!, $email: String!, $password: String!) {\n        addUser(firstName: $firstName, lastName: $lastName, gamertag: $gamertag, email: $email, password: $password) {\n            token\n            user {\n                firstName\n                lastName\n                gamertag\n                email\n            }\n        }\n    }\n`;\n","import decode from \"jwt-decode\";\n\nclass AuthService {\n    getProfile() {\n        return decode(this.getToken());\n    }\n\n    loggedIn() {\n        // Checks if there is a saved token and it's still valid\n        const token = this.getToken();\n        return !!token && !this.isTokenExpired(token);\n    }\n\n    isTokenExpired(token) {\n        try {\n            const decoded = decode(token);\n            if (decoded.exp < Date.now() / 1000) {\n                return true;\n            } else return false;\n        } catch (err) {\n            return false;\n        }\n    }\n\n    getToken() {\n        // Retrieves the user token from localStorage\n        return localStorage.getItem(\"id_token\");\n    }\n\n    login(idToken) {\n        // Saves user token to localStorage\n        localStorage.setItem(\"id_token\", idToken);\n\n        window.location.assign(\"/profile\");\n    }\n\n    logout() {\n        // Clear user token and profile data from localStorage\n        localStorage.removeItem(\"id_token\");\n        // this will reload the page and reset the state of the application\n        window.location.assign(\"/\");\n    }\n}\n\nexport default new AuthService();\n","import React, { useState, useEffect } from \"react\";\nimport { useMutation } from \"@apollo/client\";\nimport { Link } from \"react-router-dom\";\nimport { LOGIN } from \"../utils/mutations\";\nimport Auth from \"../utils/auth\";\nimport { useUser } from \"../utils/UserContext\";\n\nfunction Login(props) {\n    const { currentUser, fetchUserAccount } = useUser();\n    const [formState, setFormState] = useState({ email: \"\", password: \"\" });\n    const [login, { error }] = useMutation(LOGIN);\n\n    const handleFormSubmit = async (event) => {\n        event.preventDefault();\n        try {\n            const mutationResponse = await login({\n                variables: { email: formState.email, password: formState.password },\n            });\n            const token = mutationResponse.data.login.token;\n            await fetchUserAccount(mutationResponse.data.login.user.gamertag);\n            Auth.login(token);\n        } catch (e) {\n            console.log(e);\n        }\n    };\n\n    const handleChange = (event) => {\n        const { name, value } = event.target;\n        setFormState({\n            ...formState,\n            [name]: value,\n        });\n    };\n\n    return (\n        <div className=\"container my-1\">\n            <Link to=\"/signup\">← Go to Signup</Link>\n            {currentUser.length !== 0 ? <h2>Hello, {currentUser.gamertag}</h2> : <h2>Loading</h2>}\n\n            <h2>Login</h2>\n            <form onSubmit={handleFormSubmit}>\n                <div className=\"flex-row space-between my-2\">\n                    <label htmlFor=\"email\">Email address:</label>\n                    <input placeholder=\"youremail@test.com\" name=\"email\" type=\"email\" id=\"email\" onChange={handleChange} />\n                </div>\n                <div className=\"flex-row space-between my-2\">\n                    <label htmlFor=\"pwd\">Password:</label>\n                    <input placeholder=\"******\" name=\"password\" type=\"password\" id=\"pwd\" onChange={handleChange} />\n                </div>\n                {error ? (\n                    <div>\n                        <p className=\"error-text\">The provided credentials are incorrect</p>\n                    </div>\n                ) : null}\n                <div className=\"flex-row flex-end\">\n                    <button type=\"submit\">Submit</button>\n                </div>\n            </form>\n        </div>\n    );\n}\n\nexport default Login;\n","import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useMutation } from \"@apollo/client\";\nimport Auth from \"../utils/auth\";\nimport { ADD_USER } from \"../utils/mutations\";\n\nfunction Signup(props) {\n    const [formState, setFormState] = useState({ email: \"\", password: \"\", firstName: \"\", lastName: \"\", gamertag: \"\" });\n    const [addUser] = useMutation(ADD_USER);\n\n    const handleFormSubmit = async (event) => {\n        event.preventDefault();\n        const mutationResponse = await addUser({\n            variables: {\n                email: formState.email,\n                password: formState.password,\n                firstName: formState.firstName,\n                lastName: formState.lastName,\n                gamertag: formState.gamertag,\n            },\n        });\n        const token = mutationResponse.data.addUser.token;\n        console.log(mutationResponse);\n        Auth.login(token);\n    };\n\n    const handleChange = (event) => {\n        const { name, value } = event.target;\n        setFormState({\n            ...formState,\n            [name]: value,\n        });\n    };\n\n    return (\n        <div className=\"container my-1\">\n            <Link to=\"/login\">← Go to Login</Link>\n\n            <h2>Signup</h2>\n            <form onSubmit={handleFormSubmit}>\n                <div className=\"flex-row space-between my-2\">\n                    <label htmlFor=\"firstName\">First Name:</label>\n                    <input placeholder=\"First\" name=\"firstName\" type=\"firstName\" id=\"firstName\" onChange={handleChange} />\n                </div>\n                <div className=\"flex-row space-between my-2\">\n                    <label htmlFor=\"lastName\">Last Name:</label>\n                    <input placeholder=\"Last\" name=\"lastName\" type=\"lastName\" id=\"lastName\" onChange={handleChange} />\n                </div>\n                <div className=\"flex-row space-between my-2\">\n                    <label htmlFor=\"gamertag\">Gamertag:</label>\n                    <input placeholder=\"tag\" name=\"gamertag\" type=\"gamertag\" id=\"gamertag\" onChange={handleChange} />\n                </div>\n                <div className=\"flex-row space-between my-2\">\n                    <label htmlFor=\"email\">Email:</label>\n                    <input placeholder=\"youremail@test.com\" name=\"email\" type=\"email\" id=\"email\" onChange={handleChange} />\n                </div>\n                <div className=\"flex-row space-between my-2\">\n                    <label htmlFor=\"pwd\">Password:</label>\n                    <input placeholder=\"******\" name=\"password\" type=\"password\" id=\"pwd\" onChange={handleChange} />\n                </div>\n                <div className=\"flex-row flex-end\">\n                    <button type=\"submit\">Submit</button>\n                </div>\n            </form>\n        </div>\n    );\n}\n\nexport default Signup;\n","import React, { useEffect, useState } from \"react\";\nimport Card from \"../components/Card/index\";\n// import { useUser } from \"../utils/UserContext\";\n// const axios = require(\"axios\");\n\nconst Profile = () => {\n    // const [account, getAccount] = useState(\"\");\n    // const { currentUser, fetchUserAccount } = useUser();\n    // let profileData = {};\n\n    // useEffect(() => {\n    //     profileData = JSON.parse(localStorage.getItem(\"user\"));\n    // }, []);\n\n    const [profileData, setProfileData] = useState({});\n\n    useEffect(() => {\n        const user = JSON.parse(localStorage.getItem(\"user\"));\n        setProfileData(user);\n    }, []);\n\n    // const fetchAccount = async () => {\n    //     try {\n    //         const fetch = await axios.get(\"/api/account\");\n    //         console.log(\"fetch data:\", fetch.data);\n    //         // getAccount(fetch.data);\n    //         setCurrentUser(fetch.data);\n    //         console.log(currentUser);\n    //     } catch (err) {\n    //         console.error(err);\n    //     }\n    // };\n\n    // if (account.length !== 0) {\n    //     console.log(account[\"profileUsers\"][0].settings[2].value);\n    // }\n\n    return (\n        <div className=\"container\">\n            {/* {currentUser.length !== 0 ? <h2>Hello, {currentUser[\"profileUsers\"][0].settings[2].value}</h2> : <h2>Loading</h2>} */}\n            {/* {profileData.length !== 0 ? <h2>Hello, {profileData.gamertag}</h2> : <h2>Loading</h2>} */}\n            <h2>Hello, {profileData.gamertag}</h2>\n            <Card />\n        </div>\n    );\n};\n\nexport default Profile;\n","import React from \"react\";\nimport Auth from \"../../utils/auth\";\nimport { Link } from \"react-router-dom\";\nimport { useUser } from \"../../utils/UserContext\";\n\n// displays nav bar\nfunction Nav() {\n    //   const { currentUser, updateUser } = useUser();\n    //   React.useEffect(() => {\n    //     updateUser();\n    //   }, []);\n\n    function showNavigation() {\n        // displayed if user is logged in\n        if (Auth.loggedIn()) {\n            return (\n                <section className=\"top-nav\">\n                    <h1>\n                        <Link to=\"/\">\n                            <span role=\"img\" aria-label=\"controller \">\n                                🎮\n                            </span>\n                            Gamerz Statz\n                        </Link>\n                    </h1>\n                    <input id=\"menu-toggle\" type=\"checkbox\" />\n                    <label className=\"menu-button-container\" htmlFor=\"menu-toggle\">\n                        <div className=\"menu-button\"></div>\n                    </label>\n                    <ul className=\"menu\">\n                        <li>\n                            <Link to=\"/orderHistory\">Order History</Link>\n                        </li>\n                        <li>\n                            {/* this is not using the Link component to logout or user and then refresh the application to the start */}\n                            <a href=\"/\" onClick={() => Auth.logout()}>\n                                Logout\n                            </a>\n                        </li>\n                    </ul>\n                </section>\n            );\n        } else {\n            // displayed if user is not logged in\n            return (\n                <section className=\"top-nav\">\n                    <h1>\n                        <Link to=\"/\">\n                            <span role=\"img\" aria-label=\"controller \">\n                                🎮\n                            </span>\n                            Gamerz Statz\n                        </Link>\n                    </h1>\n                    <input id=\"menu-toggle\" type=\"checkbox\" />\n                    <label className=\"menu-button-container\" htmlFor=\"menu-toggle\">\n                        <div className=\"menu-button\"></div>\n                    </label>\n                    <ul className=\"menu\">\n                        <li>\n                            <Link to=\"/signup\">Signup</Link>\n                        </li>\n                        <li>\n                            <Link to=\"/login\">Login</Link>\n                        </li>\n                    </ul>\n                </section>\n            );\n        }\n    }\n\n    return (\n        // logo section with name\n        <header>\n            <nav>{showNavigation()}</nav>\n        </header>\n    );\n}\n\nexport default Nav;\n","import React from \"react\";\nimport { Chart as ChartJS, CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend } from \"chart.js\";\nimport { Bar } from \"react-chartjs-2\";\nimport { useUser } from \"../../utils/UserContext\";\n\nexport default function Chart() {\n  const { currentUser } = useUser();\n  ChartJS.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend);\n\n  const options = {\n    scales: {\n      x: {\n        grid: {\n          color: \"white\",\n          lineWidth: 0.5,\n        },\n        ticks: {\n          color: \"white\",\n          font: {\n            weight: \"normal\",\n          },\n        },\n      },\n      y: {\n        grid: {\n          color: \"white\",\n          lineWidth: 0.5,\n        },\n        ticks: {\n          color: \"white\",\n          font: {\n            weight: \"normal\",\n          },\n        },\n      },\n    },\n    responsive: true,\n    plugins: {\n      legend: {\n        position: \"top\",\n        labels: {\n          color: \"white\",\n          font: {\n            weight: \"normal\",\n          },\n        },\n      },\n      title: {\n        display: true,\n        text: `${currentUser.gamertag} vs Itali4NStali0nz: MLB The Show: Call of Duty Edition`,\n        color: \"white\",\n        font: {\n          weight: \"normal\",\n        },\n      },\n    },\n  };\n  const labels = [\"Wins\", \"Loses\", \"Kills\", \"RBIs\"];\n\n  const data = {\n    labels,\n    datasets: [\n      {\n        label: currentUser.gamertag,\n        data: [10, 24, 9, 37],\n        backgroundColor: \"#AAB1AE\",\n      },\n      {\n        label: \"Itali4NStali0nz\",\n        data: [5, 43, 19, 87],\n        // data: labels.map(() => faker.datatype.number({ min: 0, max: 1000 })),\n        backgroundColor: \"#DB1A20\",\n      },\n    ],\n  };\n\n  return (\n    <>\n      <Bar options={options} data={data} />\n    </>\n  );\n}\n","import React from \"react\";\nimport Chart from \"./../components/Chart\";\n\nexport default function ChartForNow() {\n  return (\n    <>\n      <Chart />\n    </>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/linkedinpsfix.2404a02b.png\";","import React from \"react\";\n// import { useUser } from \"../../utils/UserContext\";\nimport LinkedIn from \"../../assets/linkedinpsfix.png\";\n\nexport default function Footer() {\n  return (\n    <div>\n      <footer className=\"footer\">\n        {/* footer card for all members */}\n        <div className=\"footer-card\">\n          <p>Joe Pa</p>\n          <img className=\"w-xsm\" src={LinkedIn} />\n        </div>\n      </footer>\n    </div>\n  );\n}\n","import React from \"react\";\nimport UserProvider from \"./utils/UserContext\";\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\nimport { ApolloClient, InMemoryCache, ApolloProvider, createHttpLink } from \"@apollo/client\";\nimport { setContext } from \"@apollo/client/link/context\";\n\nimport Home from \"./pages/Home\";\nimport NoMatch from \"./pages/NoMatch\";\nimport Login from \"./pages/Login\";\nimport Signup from \"./pages/Signup\";\nimport Profile from \"./pages/Profile\";\nimport Nav from \"./components/Nav\";\nimport ChartForNow from \"./pages/ChartForNow\";\nimport Footer from \"./components/Footer/index\";\n\nconst httpLink = createHttpLink({\n  uri: \"/graphql\",\n});\n\nconst authLink = setContext((_, { headers }) => {\n  const token = localStorage.getItem(\"id_token\");\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `Bearer ${token}` : \"\",\n    },\n  };\n});\n\nconst client = new ApolloClient({\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache(),\n});\n\nfunction App() {\n  return (\n    <ApolloProvider client={client}>\n      <UserProvider>\n        <Router>\n          <div>\n            <Nav />\n            <Routes>\n              <Route path=\"/\" element={<Home />} />\n              <Route path=\"/login\" element={<Login />} />\n              <Route path=\"/signup\" element={<Signup />} />\n              <Route path=\"/profile\" element={<Profile />} />\n              <Route path=\"*\" element={<NoMatch />} />\n              <Route path=\"/chart\" element={<ChartForNow />} />\n            </Routes>\n            <Footer />\n          </div>\n        </Router>\n      </UserProvider>\n    </ApolloProvider>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./assets/css/main.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n"],"sourceRoot":""}